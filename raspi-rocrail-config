#!/bin/bash

ARCH=$(uname -m)
echo "[INFO] Systemarchitektur: $ARCH"

while true; do
  clear
  echo "===== Rocrail Konfiguration ====="
  echo "0) Rocrail-Verzeichnisse vorbereiten"
  echo "1) Rocrail installieren (architekturabhängig)"
  echo "2) Rocrail starten"
  echo "3) Rocrail stoppen"
  echo "4) Rocrail Status anzeigen"
  echo "5) Rocrail Backup erstellen"
  echo "6) Rocrail aktualisieren"
  echo "7) Raspberry Pi OS updaten"
  echo "8) System neu starten"
  echo "9) Beenden"
  echo "10) Rocrail mit Wiki-Demo starten"
  echo "11) WLAN einrichten"
  echo "12) Rocrail im Benutzer-Modus starten"
  echo "13) Rocrail Autostart (Crontab) einrichten"
  echo -n "Auswahl: "
  read eingabe
  case $eingabe in

    0)
      echo "[INFO] Verzeichnisse werden vorbereitet..."
      mkdir -p "$HOME/Documents/Rocrail/images"
      mkdir -p "$HOME/Rocrail/bin"
      echo "[INFO] Erzeuge startrocrail.sh..."
      cat > "$HOME/Rocrail/startrocrail.sh" <<EOF
#!/bin/sh
Arbeitsbereich=\$1
cd \$HOME/Rocrail
nohup \$HOME/Rocrail/bin/rocrail -l \$HOME/Rocrail/bin -w \$Arbeitsbereich -img \$Arbeitsbereich/images -f -pwr > /dev/null 2>&1 &
EOF
      chmod +x "$HOME/Rocrail/startrocrail.sh"
      ln -sf "$HOME/Rocrail/startrocrail.sh" "$HOME/startrocrail.sh"
      echo "[OK] Verzeichnisse und Startskript eingerichtet."
      read -p "Weiter mit Enter..."
      ;;
    
    1)
      echo "[INFO] Rocrail wird installiert..."
      if [ "$ARCH" = "aarch64" ]; then
        URL="https://wiki.rocrail.net/rocrail-snapshot/Rocrail-PiOS11-ARM64.zip"
        echo "[INFO] 64-Bit System erkannt – lade ARM64-Version"
      else
        URL="https://wiki.rocrail.net/rocrail-snapshot/Rocrail-PiOS11-ARMHF.zip"
        echo "[INFO] 32-Bit System erkannt – lade ARMHF-Version"
      fi

      mkdir -p "$HOME/Downloads/Rocrail"
      cd "$HOME/Downloads/Rocrail" || exit 1
      wget --no-check-certificate "$URL" -O Rocrail.zip
      unzip -u Rocrail.zip -d "$HOME/Rocrail"
      chmod +x "$HOME/Rocrail/bin/rocrail"

      echo "[OK] Rocrail erfolgreich installiert."
      echo
      echo "[HINWEIS] Der Raspberry Pi wird jetzt neu gestartet."
      echo "[HINWEIS] Die Verbindung zu diesem Fenster (z. B. PuTTY) wird dabei getrennt."
      echo "[HINWEIS] Bitte nach etwa 1 Minute erneut per SSH verbinden."
      echo
      echo "[INFO] Neustart in 10 Sekunden – abbrechbar mit STRG+C..."
      sleep 10
      sudo reboot
      ;;

    
    2)
      echo "[INFO] Starte Rocrail im aktuellen Benutzerverzeichnis..."
      nohup "$HOME/Rocrail/bin/rocrail" -l "$HOME/Rocrail/bin" -w "$HOME/Documents/Rocrail" -img "$HOME/Documents/Rocrail/images" -f -pwr > /dev/null 2>&1 &
      echo "[OK] Rocrail gestartet."
      read -p "Weiter mit Enter..."
      ;;

       3)
      echo "[INFO] Rocrail wird gestoppt..."
      pid=$(pgrep -x rocrail)
      if [ -n "$pid" ]; then
        kill "$pid"
        echo "[OK] Rocrail wurde beendet (PID: $pid)."
      else
        echo "[INFO] Kein laufender Rocrail-Prozess gefunden."
      fi
      read -p "Weiter mit Enter..."
      ;;


    4)
      if pgrep -x rocrail > /dev/null; then
        echo "[OK] Rocrail läuft"
      else
        echo "[INFO] Rocrail läuft NICHT"
      fi
      read -p "Weiter mit Enter..."
      ;;

    5)
      echo "[INFO] Backup wird erstellt..."

      SRC="$HOME/Documents/Rocrail"

      # Standardziel
      DEST="$HOME/Backups"

      # Prüfen auf eingehängte USB-Sticks unter /media/pi/
      USB_PATH=$(find /media/pi/* -maxdepth 0 -type d 2>/dev/null | head -n 1)
      if [ -n "$USB_PATH" ]; then
        DEST="$USB_PATH/Backups"
        echo "[INFO] USB-Stick erkannt – Sicherung nach: $DEST"
      else
        echo "[INFO] Kein USB-Stick erkannt – Sicherung nach: $DEST"
      fi

      # Quelle prüfen
      if [ ! -d "$SRC" ]; then
        echo "[FEHLER] Quellordner '$SRC' existiert nicht."
        read -p "Weiter mit Enter..."
        continue
      fi

      mkdir -p "$DEST"

      DATE=$(date +'%Y-%m-%d_%H-%M')
      ZIPFILE="$DEST/rocrail_backup_$DATE.zip"

      zip -r "$ZIPFILE" "$SRC" > /dev/null 2>&1

      if [ -f "$ZIPFILE" ]; then
        echo "[OK] Backup gespeichert: $ZIPFILE"
      else
        echo "[FEHLER] Backup fehlgeschlagen!"
      fi

      read -p "Weiter mit Enter..."
      ;;

    6)
      echo "[INFO] Starte Update über update1.sh..."

      if pgrep -x rocrail > /dev/null; then
        echo "[WARNUNG] Rocrail läuft noch!"
        echo "[HINWEIS] Bitte stoppen Sie Rocrail zuerst über Menüpunkt 3."
        read -p "Abbruch – Weiter mit Enter..."
        continue
      fi

      if [ -x "$HOME/update1.sh" ]; then
        (
          bash "$HOME/update1.sh"
          echo "[INFO] Update fertig."
        )
      else
        echo "[FEHLER] update1.sh fehlt oder ist nicht ausführbar!"
      fi

      read -p "Weiter mit Enter..."
      ;;
    7)
      echo "[INFO] System wird aktualisiert..."
      sudo apt update && sudo apt full-upgrade -y && sudo apt autoremove -y && sudo apt clean
      echo "[OK] Systemupdate abgeschlossen."
      read -p "Weiter mit Enter..."
      ;;

    8)
      echo "[INFO] System wird neu gestartet..."
      sudo reboot
      ;;

    9)
      echo "[INFO] Menü beendet."

      if [ -n "$SSH_TTY" ]; then
        echo "[HINWEIS] Sie befinden sich jetzt in der Kommandozeile."
        echo "[HINWEIS] Mit 'exit' oder STRG+D beenden Sie PuTTY."
        bash --noprofile --norc
      fi

      break
      ;;
    10)
      if pgrep -x rocrail > /dev/null; then

        echo "[WARNUNG] Rocrail läuft bereits – bitte zuerst stoppen (Punkt 3)."
      else
        echo "[INFO] Rocrail wird im Demo-Modus (wikidemo) gestartet..."
        DEMO_DIR="$HOME/Rocrail/wikidemo"
        mkdir -p "$DEMO_DIR/images"
        cp -n "$HOME/Rocrail/wikidemo/plan.xml" "$DEMO_DIR/" 2>/dev/null
        "$HOME/Rocrail/startrocrail.sh" "$DEMO_DIR"
        echo "[OK] Demo-Modus gestartet."
      fi
      read -p "Weiter mit Enter..."
      ;;

    11)
      echo "[INFO] WLAN einrichten..."
      echo -n "SSID: "
      read SSID
      echo -n "Passwort: "
      read -s PASS
      echo
      sudo tee /etc/wpa_supplicant/wpa_supplicant.conf > /dev/null <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=DE

network={
    ssid="$SSID"
    psk="$PASS"
}
EOF
      sudo wpa_cli -i wlan0 reconfigure
      echo "[OK] WLAN-Konfiguration übernommen."
      read -p "Weiter mit Enter..."
      ;;

    12)
      if pgrep -x rocrail > /dev/null; then
        echo "[WARNUNG] Rocrail läuft bereits – bitte zuerst stoppen (Punkt 3)."
      else
        echo "[INFO] Rocrail wird im Benutzer-Modus gestartet..."
        "$HOME/Rocrail/startrocrail.sh" "$HOME/Documents/Rocrail"
        echo "[OK] Benutzer-Modus gestartet."
      fi
      read -p "Weiter mit Enter..."
      ;;
   13)
      echo "[INFO] Rocrail Autostart-Eintrag in Crontab prüfen..."
      CRON_ENTRY="@reboot /home/pi/Rocrail/startrocrail.sh"

      if crontab -l 2>/dev/null | grep -Fxq "$CRON_ENTRY"; then
        echo "[OK] Der Autostart-Eintrag ist bereits vorhanden:"
        echo "     $CRON_ENTRY"
      else
        (crontab -l 2>/dev/null; echo "$CRON_ENTRY") | crontab -
        echo "[OK] Autostart-Eintrag hinzugefügt:"
        echo "     $CRON_ENTRY"
      fi
      read -p "Weiter mit Enter..."
      ;;


    *)
      echo "[FEHLER] Ungültige Eingabe!"
      read -p "Weiter mit Enter..."
      ;;
  esac
done
    