#!/bin/bash
# WLAN-Status prüfen
SSID=$(iwgetid -r)
if [ -n "$SSID" ]; then
  WLAN_STATUS="verbunden mit: $SSID"
else
  WLAN_STATUS="kein WLAN verbunden"
fi

# IP-Adresse ermitteln: bevorzugt eth0, dann wlan0
LAN_IP=$(ip -4 addr show eth0 2>/dev/null | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
WLAN_IP=$(ip -4 addr show wlan0 2>/dev/null | grep -oP '(?<=inet\s)\d+(\.\d+){3}')

if [ -n "$LAN_IP" ]; then
  IP_ANZEIGE="Rocrail-Server erreichbar unter LAN-IP: $LAN_IP"
elif [ -n "$WLAN_IP" ]; then
  IP_ANZEIGE="Rocrail-Server erreichbar unter WLAN-IP: $WLAN_IP"
else
  IP_ANZEIGE="Rocrail-Server nicht erreichbar (keine Netzwerkverbindung)"
fi
# IP-Adresse (LAN oder WLAN)
IP_ADDRESS=$(hostname -I | awk '{print $1}')
if [ -n "$IP_ADDRESS" ]; then
  IP_ANZEIGE="Rocrail erreichbar unter: $IP_ADDRESS"
else
  IP_ANZEIGE="Keine Netzwerkverbindung erkannt"
fi
ARCH=$(uname -m)
echo "[INFO] Systemarchitektur: $ARCH"

while true; do
  clear
  echo "===== Rocrail Konfiguration ====="
  echo "$IP_ANZEIGE"
  echo "WLAN-Status: $WLAN_STATUS"
  echo "Bitte gib die gewünschte Menü-Nummer ein und bestätige mit Enter:"
  echo "0) Rocrail-Verzeichnisse vorbereiten"
  echo "1) Rocrail installieren (architekturabhängig)"
  echo "2) Rocrail starten"
  echo "3) Rocrail stoppen"
  echo "4) Rocrail Status anzeigen"
  echo "5) Rocrail Backup erstellen"
  echo "6) Rocrail aktualisieren"
  echo "7) Raspberry Pi OS updaten"
  echo "8) System neu starten"
  echo "9) Dieses Menü Beenden"
  echo "10) Rocrail mit Wiki-Demo starten"
  echo "11) WLAN einrichten ($WLAN_STATUS)"
  echo "12) Rocrail im Benutzer-Modus starten"
  echo "13) Rocrail Autostart (Crontab) einrichten"
  echo "14) Samba Freigaben einrichten"
  echo "15) Samba-Passwort für pi setzen"
  echo "16) Raspberry herunterfahren"
  echo -n "Auswahl: "
  read eingabe
  case $eingabe in

    0)
      echo "[INFO] Verzeichnisse werden vorbereitet..."
      mkdir -p "$HOME/Documents/Rocrail/images"
      mkdir -p "$HOME/Rocrail/bin"
      # Fix für preload-Fehler auf 64-Bit-Systemen
      if [ "$(uname -m)" = "aarch64" ] && grep -q 'libarmmem' /etc/ld.so.preload 2>/dev/null; then
      echo "[INFO] Entferne inkompatiblen preload-Eintrag für 64-Bit..."
      sudo sed -i 's|.*libarmmem.*|# &|' /etc/ld.so.preload
fi

      echo "[INFO] Erzeuge startrocrail.sh..."
      cat > "$HOME/Rocrail/startrocrail.sh" <<EOF
#!/bin/sh
Arbeitsbereich=\$1
cd \$HOME/Rocrail
nohup \$HOME/Rocrail/bin/rocrail -l \$HOME/Rocrail/bin -w \$Arbeitsbereich -img \$Arbeitsbereich/images -f -pwr > /dev/null 2>&1 &
EOF
      chmod +x "$HOME/Rocrail/startrocrail.sh"
      ln -sf "$HOME/Rocrail/startrocrail.sh" "$HOME/startrocrail.sh"
      echo "[OK] Verzeichnisse und Startskript eingerichtet."
      read -p "Weiter mit Enter..."
      ;;
    
    1)
      echo "[INFO] Rocrail wird installiert..."
      if [ "$ARCH" = "aarch64" ]; then
        URL="https://wiki.rocrail.net/rocrail-snapshot/Rocrail-PiOS11-ARM64.zip"
        echo "[INFO] 64-Bit System erkannt – lade ARM64-Version"
      else
        URL="https://wiki.rocrail.net/rocrail-snapshot/Rocrail-PiOS11-ARMHF.zip"
        echo "[INFO] 32-Bit System erkannt – lade ARMHF-Version"
      fi

      mkdir -p "$HOME/Downloads/Rocrail"
      cd "$HOME/Downloads/Rocrail" || exit 1
      wget --no-check-certificate "$URL" -O Rocrail.zip
      unzip -u Rocrail.zip -d "$HOME/Rocrail"
      chmod +x "$HOME/Rocrail/bin/rocrail"

      echo "[OK] Rocrail erfolgreich installiert."
      echo
      echo "[HINWEIS] Der Raspberry Pi wird jetzt neu gestartet."
      echo "[HINWEIS] Die Verbindung zu diesem Fenster (z. B. PuTTY) wird dabei getrennt."
      echo "[HINWEIS] Bitte nach etwa 1 Minute erneut per SSH verbinden."
      echo
      echo "[INFO] Neustart in 10 Sekunden – abbrechbar mit STRG+C..."
      sleep 10
      sudo timedatectl set-timezone Europe/Berlin
      sudo reboot
      ;;

    
    2)
      echo "[INFO] Starte Rocrail im aktuellen Benutzerverzeichnis..."
      nohup "$HOME/Rocrail/bin/rocrail" -l "$HOME/Rocrail/bin" -w "$HOME/Documents/Rocrail" -img "$HOME/Documents/Rocrail/images" -f -pwr > /dev/null 2>&1 &
      echo "[OK] Rocrail gestartet."
      read -p "Weiter mit Enter..."
      ;;

       3)
      echo "[INFO] Rocrail wird gestoppt..."
      pid=$(pgrep -x rocrail)
      if [ -n "$pid" ]; then
        kill "$pid"
        echo "[OK] Rocrail wurde beendet (PID: $pid)."
      else
        echo "[INFO] Kein laufender Rocrail-Prozess gefunden."
      fi
      read -p "Weiter mit Enter..."
      ;;


    4)
      if pgrep -x rocrail > /dev/null; then
        echo "[OK] Rocrail läuft"
      else
        echo "[INFO] Rocrail läuft NICHT"
      fi
      read -p "Weiter mit Enter..."
      ;;

        5)
      echo "[INFO] Backup wird erstellt..."

      SRC="$HOME/Documents/Rocrail"
      DEST="$HOME/Backups"
      LOGFILE="$DEST/backup.log"

      # Prüfen auf eingehängte USB-Sticks unter /media/pi/
      USB_PATH=$(find /media/pi/* -maxdepth 0 -type d 2>/dev/null | head -n 1)
      if [ -n "$USB_PATH" ]; then
        DEST="$USB_PATH/Backups"
        echo "[INFO] USB-Stick erkannt – Sicherung nach: $DEST"
      else
        echo "[INFO] Kein USB-Stick erkannt – Sicherung nach: $DEST"
      fi

      # Quelle prüfen
      if [ ! -d "$SRC" ]; then
        echo "[FEHLER] Quellordner '$SRC' existiert nicht."
        read -p "Weiter mit Enter..."
        continue
      fi

      mkdir -p "$DEST"
      DATE=$(date +'%Y-%m-%d_%H-%M')
      ZIPFILE="$DEST/rocrail_backup_$DATE.zip"

      echo "[INFO] Sichere nach: $ZIPFILE"
      zip -r "$ZIPFILE" "$SRC" > /dev/null 2>&1

      if [ -f "$ZIPFILE" ]; then
        echo "[OK] Backup gespeichert: $ZIPFILE"
        echo "$(date +'%Y-%m-%d %H:%M') Backup: $ZIPFILE" >> "$LOGFILE"
      else
        echo "[FEHLER] Backup fehlgeschlagen!"
        echo "$(date +'%Y-%m-%d %H:%M') Fehler beim Backup!" >> "$LOGFILE"
      fi

      # Automatisches Aufräumen alter Backups (älter als 30 Tage)
      echo "[INFO] Alte Backups (>10 Tage) werden gelöscht..."
      find "$DEST" -name 'rocrail_backup_*.zip' -mtime +30 -delete

      read -p "Weiter mit Enter..."
      ;;

    6)
      echo "[INFO] Starte Update über update1.sh..."

      if pgrep -x rocrail > /dev/null; then
        echo "[WARNUNG] Rocrail läuft noch!"
        echo "[HINWEIS] Bitte stoppen Sie Rocrail zuerst über Menüpunkt 3."
        read -p "Abbruch – Weiter mit Enter..."
        continue
      fi

      if [ -x "$HOME/update1.sh" ]; then
        (
          bash "$HOME/update1.sh"
          echo "[INFO] Update fertig."
        )
      else
        echo "[FEHLER] update1.sh fehlt oder ist nicht ausführbar!"
      fi

      read -p "Weiter mit Enter..."
      ;;
    7)
      echo "[INFO] System wird aktualisiert..."
      sudo apt update && sudo apt full-upgrade -y && sudo apt autoremove -y && sudo apt clean
      echo "[OK] Systemupdate abgeschlossen."
      read -p "Weiter mit Enter..."
      ;;

    8)
      echo "[INFO] System wird neu gestartet..."
      sudo reboot
      ;;

    9)
      echo "[INFO] Menü beendet."

      if [ -n "$SSH_TTY" ]; then
        echo "[HINWEIS] Sie befinden sich jetzt in der Kommandozeile."
        echo "[HINWEIS] Mit 'exit' oder STRG+D beenden Sie PuTTY."
        bash --noprofile --norc
      fi

      break
      ;;
    10)
      if pgrep -x rocrail > /dev/null; then

        echo "[WARNUNG] Rocrail läuft bereits – bitte zuerst stoppen (Punkt 3)."
      else
        echo "[INFO] Rocrail wird im Demo-Modus (wikidemo) gestartet..."
        DEMO_DIR="$HOME/Rocrail/wikidemo"
        mkdir -p "$DEMO_DIR/images"
        cp -n "$HOME/Rocrail/wikidemo/plan.xml" "$DEMO_DIR/" 2>/dev/null
        "$HOME/Rocrail/startrocrail.sh" "$DEMO_DIR"
        echo "[OK] Demo-Modus gestartet."
      fi
      read -p "Weiter mit Enter..."
      ;;

   11)
  echo "[INFO] WLAN einrichten..."
  echo -n "SSID: "
  read SSID
  echo -n "Passwort: "
  read -s PASS
  echo

  # Konfiguration schreiben
  sudo tee /etc/wpa_supplicant/wpa_supplicant.conf > /dev/null <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=DE

network={
    ssid="$SSID"
    psk="$PASS"
}
EOF

  echo "[INFO] Stoppe evtl. laufenden wpa_supplicant..."
  sudo systemctl stop wpa_supplicant
  sudo pkill -f wpa_supplicant
  sudo rm -f /var/run/wpa_supplicant/wlan0

  echo "[INFO] WLAN-Schnittstelle aktivieren..."
  sudo ip link set wlan0 up
  sudo rfkill unblock wifi

  echo "[INFO] Starte wpa_supplicant manuell..."
  sudo wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf -D nl80211,wext

  echo "[INFO] Hole IP-Adresse via DHCP..."
  sudo dhclient wlan0 || echo "[WARNUNG] DHCP fehlgeschlagen"

  echo "[INFO] Verbindung prüfen..."
  if iw wlan0 link | grep -q "Connected"; then
    echo "[OK] WLAN-Verbindung erfolgreich:"
    iw wlan0 link | grep -E "SSID|signal"
  else
    echo "[FEHLER] WLAN-Verbindung nicht hergestellt."
  fi

  read -p "Weiter mit Enter..."
  ;;

       12)
      if pgrep -x rocrail > /dev/null; then
        echo "[WARNUNG] Rocrail läuft bereits – bitte zuerst stoppen (Punkt 3)."
      else
        echo "[INFO] Rocrail wird im Benutzer-Modus gestartet..."
        "$HOME/Rocrail/startrocrail.sh" "$HOME/Documents/Rocrail"
        echo "[OK] Benutzer-Modus gestartet."
      fi
      read -p "Weiter mit Enter..."
      ;;

   13)
      echo "[INFO] Rocrail Autostart-Eintrag in Crontab prüfen..."
      CRON_ENTRY="@reboot /home/pi/Rocrail/startrocrail.sh"

      if crontab -l 2>/dev/null | grep -Fxq "$CRON_ENTRY"; then
        echo "[OK] Der Autostart-Eintrag ist bereits vorhanden:"
        echo "     $CRON_ENTRY"
      else
        (crontab -l 2>/dev/null; echo "$CRON_ENTRY") | crontab -
        echo "[OK] Autostart-Eintrag hinzugefügt:"
        echo "     $CRON_ENTRY"
      fi
      read -p "Weiter mit Enter..."
      ;;

14)
  echo ""
  echo -e "\e[1mSamba installieren und konfigurieren …\e[0m"
  echo ""
  sudo apt-get update
  sudo apt-get install -y samba
  echo ""
  echo -e "\e[1mKonfiguriere /etc/samba/smb.conf …\e[0m"
  echo "" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "[Rocrail]" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   path = /home/pi/Rocrail" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   browseable = yes" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   writeable = yes" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   only guest = no" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   create mask = 0775" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   directory mask = 0775" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   valid users = pi" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "[Rocrail-Documents]" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   path = /home/pi/Documents/Rocrail" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   browseable = yes" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   writeable = yes" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   only guest = no" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   create mask = 0775" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   directory mask = 0775" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   valid users = pi" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "[Rocrail-Images]" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   path = /home/pi/Documents/Rocrail/images" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   browseable = yes" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   writeable = yes" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   only guest = no" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   create mask = 0775" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   directory mask = 0775" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo "   valid users = pi" | sudo tee -a /etc/samba/smb.conf > /dev/null
  echo ""
  echo -e "\e[1mStarte Samba-Dienst neu …\e[0m"
  echo ""
  sudo systemctl restart smbd
  echo -e "\e[1;32m[SUCCESS] Samba-Freigaben wurden eingerichtet!\e[0m"
  echo ""
  ;;
    15)
      echo "[INFO] Setze Samba-Passwort für Benutzer 'pi'..."
      echo "[HINWEIS] Du wirst jetzt nach einem neuen Passwort gefragt."
      sudo smbpasswd -a pi
      if [ $? -eq 0 ]; then
        echo "[OK] Passwort erfolgreich gesetzt."
      else
        echo "[FEHLER] Passwort konnte nicht gesetzt werden."
      fi
      read -p "Weiter mit Enter..."
      ;;
    16)
  echo "[INFO] Raspberry wird jetzt heruntergefahren..."
  echo "[HINWEIS] Das Gerät schaltet sich in wenigen Sekunden ab."
  echo "[HINWEIS] Du kannst den Strom trennen, sobald die grüne LED aus ist."
  sleep 10
  sudo shutdown -h now
  ;;

    *)
      echo "[FEHLER] Ungültige Eingabe!"
      read -p "Weiter mit Enter..."
      ;;
    
  esac
done
    